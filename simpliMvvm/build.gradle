apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

apply from: '../config/quality/quality.gradle'

def siteUrl = 'https://gitlab.com/trayis/android/SimpiMVVM'      // Homepage URL of the library
def gitUrl = 'https://gitlab.com/trayis/android/SimpiMVVM.git'   // Git repository URL

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError true
    }

    dataBinding {
        enabled = true
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'

    testImplementation "junit:junit:4.12"

    androidTestImplementation "androidx.test:runner:1.1.0-beta01"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0-beta02"
}

task prValidation {
    dependsOn 'checkstyle'
    dependsOn 'pmd'
    // dependsOn 'findbugs'
    dependsOn 'test'
}

group = "com.trayis"    // Maven Group ID for the artifact
version = "1.0.0"       // This is the library version used when deploying the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            name "SimpliMvvm"
            description = "SimpliMVVM is our effort to create a simple and understandable MVVM Library. Idea here is to create a basic code structure that can be further extend based on the project needs."
            url siteUrl
            inceptionYear "2018"

            packaging "aar"

            // Set your license
            licenses {
                license {
                    name "The Apache Software License, Version 2.0"
                    url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                }
            }
            developers {
                developer {
                    id "muks.dev"
                    name "Mukund Desai"
                    email "muks.dev@trayis.com"
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv("bintray_user")
    key = System.getenv("bintray_apikey")
    configurations = ['archives']
    pkg {
        repo = "android_lib"
        name = "SimpliMvvm"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
